function varargout=AVG_energy_balances(T,canopy,soilSurf,snowpack,...
                             optSoilThermal,feedback,dt,...
                             rainfall,Tair,airDens,press,eActAir,VPD,elevation,LAI,...
                             shortOverIn,shortUnder,longAtmIn,...
                             iceSurf,icePack,TThru,rainThru)
global SECONDS_PER_HOUR
% TfoliageTemp=nan(soilSurf.nCells,1);
TfoliageTemp=T(:,1);
% TcanopyTemp=nan(soilSurf.nCells,1);
TcanopyTemp=T(:,2);
% TPackSurfTemp=nan(soilSurf.nCells,1);
TPackSurfTemp=T(:,3);
% TSoilTemp=nan(soilSurf.nCells,1);
TSoilTemp=T(:,4);

TCanopy=zeros(soilSurf.nCells,1);
hasSurrAir=soilSurf.isOverstory;
hasSurrAir(hasSurrAir)=canopy.hasSnow;
TCanopy(hasSurrAir)=TcanopyTemp(hasSurrAir);
TCanopy(~hasSurrAir)=Tair(~hasSurrAir);
Tfoliage=TfoliageTemp;
Tfoliage(~hasSurrAir)=Tair(~hasSurrAir);
% only canopy with intercepted snow can have Tcanopy different from Tair
TCanopy(~(soilSurf.isOverstory&soilSurf.hasSnow))=Tair(~(soilSurf.isOverstory&soilSurf.hasSnow));
%% fluxes
% [RaC_pack,sensibleHeat_pack,longPackOut,snowReflected,shortBareIn,netShort_pack]=...
%     snowpack.outwardFluxes(TPackSurfTemp,TCanopy,airDens,shortUnder);
[RaC_pack,sensibleHeat_pack,longPackOut,snowReflected,shortBareIn,netShort_pack]=...
    SnowPack.outwardFluxes(snowpack.nCells,snowpack.hasSnow,snowpack.roughness,snowpack.adj_displacement,snowpack.adj_ref_height,...
                       snowpack.UAdj,snowpack.RAero,snowpack.albedo,...              
                       TPackSurfTemp,TCanopy,...
                        airDens,shortUnder);
[RaC_soil,sensibleHeat_soil,longSoilOut,soilReflected,netShort_soil,soilSurfFlux,soilFlux1,netGrndFlux,T1Temp]=...
    SoilSurf.outwardFluxes(soilSurf.nCells,soilSurf.hasSnow,soilSurf.roughness,soilSurf.adj_displacement,soilSurf.adj_ref_height,...
    soilSurf.UAdj,soilSurf.RAero,soilSurf.albedo,...
    TSoilTemp,TCanopy,airDens,shortBareIn,dt*SECONDS_PER_HOUR,optSoilThermal,...
    soilSurf.D1,soilSurf.D2,soilSurf.dp,soilSurf.kappa,soilSurf.Cs,soilSurf.T1,soilSurf.T2);
% short wave reflection from the understory
shortReflected=snowReflected+soilReflected;
[RaC_can,sensibleHeat_can,longOverOut,netShort_can,sensibleHeatAtm]=...
    Canopy.outwardFluxes(canopy.nCells,canopy.hasSnow,canopy.roughness,canopy.adj_displacement,canopy.adj_ref_height,...
    canopy.UAdj,canopy.RAero,canopy.albedo,...    
    Tfoliage(soilSurf.isOverstory),TCanopy(soilSurf.isOverstory),...
    airDens(soilSurf.isOverstory),Tair(soilSurf.isOverstory),shortOverIn,shortReflected(soilSurf.isOverstory),...
    canopy.short_atten);
% upward long wave radiation from the understory
longUnderOut=longPackOut+longSoilOut;
% downward long wave radiation to the understory 
longUnderIn=zeros(soilSurf.nCells,1);
longUnderIn(soilSurf.isOverstory)=longOverOut;
longUnderIn(~soilSurf.isOverstory)=longAtmIn(~soilSurf.isOverstory);
% heat flux from understory
% note that in CREST, snow flux is assumed zero because snow is a good
% insulator

hasIntSnow=false(soilSurf.nCells,1);
hasIntSnow(soilSurf.isOverstory)=canopy.hasSnow;
% If the canopy does not have intercepted snow. the air temperature
% surounding the canopy is the air temperature,no sensible heat between the
% atm and the surrounding air and atm air exist, nor the surrounding air to
% and the canopy. the ground flux must go through (not be consumed by) the
% surrounding air to the canopy;
% Otherwise, the ground flux goes into the surrouding air to balance its
% budget
% the snow has no upward conductive heat
fluxUnder2Canopy=zeros(soilSurf.nCells,1);
grndfluxConductToOverstory=~(soilSurf.hasSnow|hasIntSnow);
fluxUnder2Canopy(grndfluxConductToOverstory)=soilSurfFlux(grndfluxConductToOverstory);
% soil flux to the snow pack
fluxUnder2Pack=zeros(soilSurf.nCells,1);
fluxUnder2Pack(soilSurf.hasSnow)=soilSurfFlux(soilSurf.hasSnow);
% if the canopy has intSnow and ground heat flux is not overshadowed by the
% snow pack, it is directly conducted to the surrounding air
grndfluxConductToAir=(~soilSurf.hasSnow) & hasIntSnow;
fluxUnderToAtm=zeros(soilSurf.nCells,1);
fluxUnderToAtm(grndfluxConductToAir)=soilSurfFlux(grndfluxConductToAir);
fluxUnderToAtm=fluxUnderToAtm(soilSurf.isOverstory);
%% netRadiation
netRad_can=Canopy.netRadiation(netShort_can,longAtmIn(soilSurf.isOverstory),longOverOut,longUnderOut(soilSurf.isOverstory),fluxUnder2Canopy(soilSurf.isOverstory));
netRad_pack=SnowPack.netRadiation(snowpack.nCells,snowpack.hasSnow,netShort_pack,longUnderIn,longPackOut);
[netRad_soil,netRadET_soil]=SoilSurf.netRadiation(soilSurf.nCells,soilSurf.hasSnow,soilSurf.isOverstory,soilSurf.isBare,...
    netShort_soil,longUnderIn,longSoilOut,soilSurfFlux,netGrndFlux);
%% latent heat
[AET_can,actEvap_can,actTranspir_can,vaporFluxSub_can,latentHeat_can]=...
    Canopy.LatentHeat(dt*SECONDS_PER_HOUR,canopy.nCells,canopy.hasSnow,...
             RaC_can,Tfoliage(soilSurf.isOverstory),...
             eActAir(soilSurf.isOverstory),VPD(soilSurf.isOverstory),...
             rainfall(soilSurf.isOverstory),Tair(soilSurf.isOverstory),...% should be able to be replaced by TCanopy
             LAI(soilSurf.isOverstory),elevation(soilSurf.isOverstory),...
             airDens(soilSurf.isOverstory),press(soilSurf.isOverstory),...
             netShort_can,netRad_can,...
             canopy.Wm,canopy.WOrg,...
             soilSurf.root(soilSurf.isOverstory,:),soilSurf.Wcr(soilSurf.isOverstory,:), soilSurf.Wwp(soilSurf.isOverstory,:),...
             canopy.rarc,canopy.r0c,canopy.RGL,...
             soilSurf.W(soilSurf.isOverstory,:),soilSurf.ice(soilSurf.isOverstory,:),...
             canopy.intSnow,canopy.W);
[vaporMassEvap_pack,vaporMassSub_pack,latentHeat_pack]=SnowPack.LatentHeat(dt,snowpack.nCells,snowpack.hasSnow,RaC_pack,TPackSurfTemp,...
              eActAir,VPD,airDens,press,iceSurf,icePack,snowpack.W);
[AET_soil,actEvap_soil,actEvapGrnd_soil,actTranspir_soil,latentHeat_soil]=...
    SoilSurf.LatentHeat(...
    feedback,dt*SECONDS_PER_HOUR,soilSurf.nCells,soilSurf.hasSnow,soilSurf.isOverstory,soilSurf.isBare,...
    RaC_soil,TSoilTemp,airDens,press,eActAir,VPD,LAI,rainfall,...
    elevation,Tair,netShort_soil,netRadET_soil,canopy.hasSnow,...
    soilSurf.depths(1),soilSurf.rarc,soilSurf.r0c,soilSurf.RGL,...
    soilSurf.b_infilt,soilSurf.moist_resid,soilSurf.WmVeg,soilSurf.Wcr,soilSurf.Wwp,soilSurf.Wm,...
                soilSurf.WVegOrg,soilSurf.W,soilSurf.ice,soilSurf.root,soilSurf.SS0);        
%% energy balances
[error_can,energyPhaseChange_can]=Canopy.energy_balance(canopy.nCells,canopy.hasSnow,...
    Tfoliage(soilSurf.isOverstory),dt*SECONDS_PER_HOUR,sensibleHeat_can,latentHeat_can,TCanopy(soilSurf.isOverstory),netRad_can,AET_can,vaporFluxSub_can,....
    canopy.CH_positive,canopy.CH_negative,...
    canopy.intSnow,canopy.intSnowOrg,canopy.W,canopy.WOrg,canopy.TSurf);
%% if the canopy has no snow interception, its budget is directly added to the understory
error_can_add=error_can;
error_can(~canopy.hasSnow)=0;
error_can_add(canopy.hasSnow)=0;
[error_pack,dCCSurf,dCCPack,refrozenIcePack,energyPhaseChange_pack]=snowpack.energy_balance(snowpack.nCells,snowpack.hasSnow,snowpack.isOverstory,...
                            TPackSurfTemp,dt*SECONDS_PER_HOUR,...
                            netRad_pack,TThru,rainThru,iceSurf,icePack,...
                            sensibleHeat_pack,latentHeat_pack,...
                            vaporMassEvap_pack,vaporMassSub_pack,...
                            fluxUnder2Pack,error_can_add,...
                            snowpack.CH_positive,snowpack.CH_negative,snowpack.TSurf,snowpack.W,snowpack.WPack,snowpack.CCPack);
error_soil=soilSurf.energy_balance(soilSurf.nCells,soilSurf.hasSnow,soilSurf.isOverstory,...
    TSoilTemp,T1Temp,dt*SECONDS_PER_HOUR,sensibleHeat_soil,latentHeat_soil,netRad_soil,error_can_add,optSoilThermal,...
    soilSurf.D1,soilSurf.D2,soilSurf.dp,...
    soilSurf.Cs,soilSurf.TSurf,soilSurf.T1);
sensibleHeatUnder=(sensibleHeat_pack(soilSurf.isOverstory)+sensibleHeat_soil(soilSurf.isOverstory)).*canopy.hasSnow;
error_Atm=Canopy.atmo_energybalance(sensibleHeatAtm,sensibleHeat_can,sensibleHeatUnder+fluxUnderToAtm);
error_Atm1=zeros(soilSurf.nCells,1);
error_Atm1(soilSurf.isOverstory)=error_Atm;
error_can1=zeros(soilSurf.nCells,1);
error_can1(soilSurf.isOverstory)=error_can;
if nargout==1
    varargout={[error_can1,error_Atm1,error_pack,error_soil]};...      
else
    varargout={error_can1,error_Atm1,error_pack,error_soil,...% balances
        actEvap_can,actTranspir_can,vaporFluxSub_can,energyPhaseChange_can,...% mass transformation in the canopy layer
          vaporMassEvap_pack,vaporMassSub_pack,dCCSurf,dCCPack,refrozenIcePack,energyPhaseChange_pack,...%mass transformation in the pack layer
          actEvap_soil,actEvapGrnd_soil,actTranspir_soil};
end
end